@using StackExchange.Opserver.Views.SQL
@using Roles = StackExchange.Opserver.Models.Roles
@model ServersModel
@{
    var allJobs = Model.Clusters
                  .SelectMany(c => c.Nodes.SelectMany(n => n.JobSummary.SafeData(true).Select(j => new { ServerName = n.Name, Job = j })))
                  .Union(Model.StandaloneInstances.SelectMany(n => n.JobSummary.SafeData(true).Select(j => new { ServerName = n.Name, Job = j })))
                  .ToList();
}
<h5 class="page-header">
    @(allJobs.Count.Pluralize("Job")) <span class="small">(@(allJobs.Count(j => j.Job.IsRunning).Pluralize("Running")))</span>
</h5>
<div class="js-refresh" data-name="sql-jobs">
@if (allJobs.Count > 0)
{
    <table class="table table-striped table-hover text-nowrap table-super-condensed table-responsive js-sql-jobs">
        <thead>
            <tr>
                <th></th>
                <th>Server</th>
                <th>Name</th>
                <th>Last Run</th>
                <th>Start</th>
                <th>End</th>
                <th>Duration</th>
                <th>Enabled</th>
                @if (Current.IsInRole(Roles.SQLAdmin))
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var jw in allJobs)
            {
                var j = jw.Job;
                var lastInitiator = j.LastRunRequestedSource.HasValue ? j.LastRunRequestedSource.Value.GetDescription() : "Unknown";
                <tr data-node="@jw.ServerName" class="@j.RowClass()@(j.IsRunning ? " info" : null)@(j.IsEnabled ? "" : " text-muted")" data-guid="@j.JobId.ToString()" title="@if(!j.IsEnabled){<text>(DISABLED)
</text>}Job: @j.Name
@j.Description
@if(j.IsRunning) {<text>Currently Running
</text>}

Category: @j.Category
Created: @j.DateCreated.ToZuluTime()

Last Run Initiated by: @lastInitiator
Last Run Message: @j.LastRunMessage">
                    <td>@j.IconSpan()</td>
                    <td>@jw.ServerName</td>
                    <td>
                        @j.Name
                        @if (j.IsRunning)
                    {
                            <span class="good">(Running)</span>
                        }
                    </td>
                    @if (j.IsRunning)
                    {
                        <td>Running (@lastInitiator)</td>
                        <td data-val="@(j.LastStartDate?.ToEpochTime())">@(j.LastStartDate?.ToRelativeTimeSpan())</td>
                        <td data-val="-1"></td>
                        <td data-val="@(j.LastRunDurationSeconds ?? -1)">@(j.LastRunDuration.HasValue ? j.LastRunDuration.Value.ToTimeStringMini() : "")</td>
                    }
                    else if (j.LastRunStatus.HasValue)
                    {
                        <td>@j.LastRunMonitorStatus.IconSpan() @j.LastRunMonitorStatus.Span(j.LastRunStatus.Value.GetDescription().IsNullOrEmptyReturn("Unknown")) (@lastInitiator)</td>
                        <td data-val="@(j.LastStartDate?.ToEpochTime())">@(j.LastStartDate?.ToRelativeTimeSpan())</td>
                        <td data-val="@(j.LastStopDate?.ToEpochTime())">@(j.LastStopDate?.ToRelativeTimeSpan())</td>
                        <td data-val="@(j.LastRunDurationSeconds ?? -1)">@(j.LastRunDuration.HasValue ? j.LastRunDuration.Value.ToTimeStringMini() : "")</td>
                    }
                    else
                    {
                        <td class="text-muted">no run history found</td>
                        <td data-val="-1"></td>
                        <td data-val="-1"></td>
                        <td data-val="-1"></td>
                    }
                    <td class="@(j.IsEnabled ? "" : "text-warning")">@(j.IsEnabled ? "Yes" : "No")</td>
                    @if (Current.IsInRole(Roles.SQLAdmin))
                    {
                        <td class="actions">
                            @if (j.IsEnabled)
                        {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-warning" data-action="toggle" data-enable="false">Disable</a>
                            }
                            else
                            {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-success" data-action="toggle" data-enable="true">Enable</a>
                            }
                            @if (!j.IsRunning)
                        {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-primary" data-action="start" data-guid="@j.JobId.ToString()">Start</a>
                            }
                            else
                            {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-danger" data-action="stop" data-guid="@j.JobId.ToString()">Stop</a>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <script>
    $(function () {
        $('.js-sql-jobs').tablesorter({
            sortAppend: [[1, 0]],
            headers: {
                1: { sorter: 'cellText' }, 
                2: { sorter: 'cellText' },
                3: { sorter: 'cellText' },
                4: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                5: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                6: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                7: { sorter: 'cellText' },
            }
        });
    });
    </script>
}
else
{
    <div class="no-content">No jobs information available</div>
}
</div>