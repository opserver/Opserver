@using StackExchange.Opserver.Data.SQL
@using StackExchange.Opserver.Views.SQL
@model DatabasesModel
@{
    Layout = "Databases.Modal.cshtml";
    var s = Model.Instance;
    var result = s.GetQueryStoreInfo(Model.Database);
    var data = result.Data;
}
@section top {
     <span class="pull-right small">@Helpers.PollNow(result)</span> 
 } 
 @if (result.Data == null || !result.Successful) 
 { 
     <div class="alert alert-warning"> 
         <h5>There was an error fetching table info from @s.Name for @Model.Database</h5> 
        <p class="error-stack">@result.ErrorMessage</p> 
     </div> 
 }
else
{
    <div class="alert alert-dismissible alert-info" style="margin-bottom: 2px;">
        this is kyle trying a thing
    </div>
    <table class="table table-striped table-hover text-nowrap table-super-condensed table-responsive js-database-indexes">
        <thead>
            <tr>
                <th></th>
                <th>Query Id</th>
                <th>Total Historical LR's</th>
                <th>Total Recent LR's</th>
                <th>Average Historical LR's</th>
                <th>Average Recent LR's</th>
                <th>Percent Increase</th>
                <th>Count of Executions</th>
                <th>Number of Plans</th>
                <th>Query</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var i in data)
            {
                <tr data-obj="@i.QueryId" class="js-next-collapsible">
                    <td class="text-muted">
                    </td>
                    <td class="" data-val="@i.QueryId">
                        @i.QueryId
                    </td>
                    <td class="" data-val="@i.TotalLogicalReadsHistorical">
                        @i.TotalLogicalReadsHistorical
                    </td>
                    <td class="" data-val="@i.TotalLogicalReadsRecent">
                        @i.TotalLogicalReadsRecent
                    </td>
                    <td class="" data-val="@i.AverageHistorical">
                        @i.AverageHistorical
                    </td>
                    <td class="" data-val="@i.AverageRecent">
                        @i.AverageRecent
                    </td>
                    <td class="" data-val="@i.PercentIncrease">
                        @i.PercentIncrease
                    </td>
                    <td class="" data-val="@i.CountOfExecutionsRecent">
                        @i.CountOfExecutionsRecent
                    </td>
                    <td class="" data-val="@i.NumberOfPlans">
                        @i.NumberOfPlans
                    </td>
                    <td class="">
                        @(i.QueryText?.TruncateWithEllipsis(50))
                    </td>
                    @* <td><span class="text-muted">@(i.SchemaName).</span><span>@i.TableName</span></td> *@
                    @* <td> *@
                    @*     <a href="#/db/@(Model.Database)/unusedindexes/@(i.SchemaName).@(i.TableName).@(i.IndexName)" title="@i.IndexName"> *@
                    @*         @i.IndexName.TruncateWithEllipsis(80) *@
                    @*     </a> *@
                    @* </td> *@
                    @* <td data-val="@i.TotalBytes">@(i.TotalBytes.ToSize().ToMutedIfNA())</td> *@
                    @* <td data-val="@i.RowCount">@(i.RowCount.ToComma())</td> *@
                    @* <td data-val="@i.UserSeeks">@(i.UserSeeks.ToComma())</td> *@
                    @* <td data-val="@i.UserScans">@(i.UserScans.ToComma())</td> *@
                    @* <td data-val="@i.UserLookups">@(i.UserLookups.ToComma())</td> *@
                    @* <td data-val="@i.UserUpdates">@(i.UserUpdates.ToComma())</td> *@
                </tr>
                <tr class="tablesorter-childRow hidden"></tr>

                <tr class="tablesorter-childRow hidden"></tr>
            }
        </tbody>
        <tfoot>
             @if (!result.Data.Any())
             {
                 <tr>
                     <td colspan="8">
                         <div class="no-content">There aren't any indexes in this database.</div>
                     </td>
                 </tr>
             }
             else
             {
                 <tr class="total-row">
                     <td colspan="8">
                         <b>Total</b> <span class="text-muted">(@result.Data.Count.Pluralize("result"))</span>
                     </td>
                 </tr>
             }
        </tfoot>
    </table>
    <script>
        $(function () {
            $('.js-database-indexes').tablesorter({
                headers: {
                    3: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    4: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    5: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    6: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    7: { sorter: 'dataVal', sortInitialOrder: 'desc' },
                    8: { sorter: 'dataVal', sortInitialOrder: 'desc' }
                }
            });
            Status.highlight();
        });
    </script>
}
