@using Roles = StackExchange.Opserver.Models.Roles
@model StackExchange.Opserver.Data.SQL.SQLInstance
@{
    Layout = null;
    var jobs = Model.JobSummary;
    var data = jobs.SafeData(true);
}
<h4 class="modal-title" title="Updated @(jobs.LastPoll?.ToRelativeTime())">
    Agent Jobs
</h4>
@if (data.Any())
{
    <table class="table table-striped table-hover text-nowrap table-super-condensed table-responsive">
        <thead>
            <tr>
                <th></th>
                <th>Name</th>
                <th>Last Run</th>
                <th>Start</th>
                <th>End</th>
                <th>Duration</th>
                <th>Enabled</th>
                @if (Current.User.IsInRole(Roles.SQLAdmin))
                {
                    <th>Actions</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var j in data.OrderByDescending(j => j.LastRunRequestedDate))
            {
                <tr class="@j.RowClass()@(j.IsRunning ? " info" : null)@(j.IsEnabled ? "" : " text-muted")" data-guid="@j.JobId.ToString()" title="@if(!j.IsEnabled){<text>(DISABLED) 
</text>}Job: @j.Name
@j.Description
@if(j.IsRunning) {<text>Currently Running
</text>}

Category: @j.Category
Created: @j.DateCreated.ToZuluTime()
                            
Last Run Initiated by: @j.LastRunRequestedSource.GetDescription()
Last Run Message: @j.LastRunMessage">
                    <td>@j.IconSpan()</td>
                    <td>@j.Name
                        @if (j.IsRunning)
                        {
                            <span class="good">(Running)</span>
                        }
                    </td>
                    @if (j.IsRunning)
                    {
                        <td>Running (@j.LastRunRequestedSource.GetDescription())</td>
                        <td>@(j.LastStartDate?.ToRelativeTimeSpan())</td>
                        <td></td>
                        <td>@(j.LastRunDuration.HasValue ? j.LastRunDuration.Value.ToTimeStringMini() : "")</td>
                    }
                    else if (j.LastRunStatus.HasValue)
                    {
                        <td>@j.LastRunMonitorStatus.IconSpan() @j.LastRunMonitorStatus.Span(j.LastRunStatus.Value.GetDescription().IsNullOrEmptyReturn("Unknown")) (@j.LastRunRequestedSource.GetDescription())</td>
                        <td>@(j.LastStartDate?.ToRelativeTimeSpan())</td>
                        <td>@(j.LastStopDate?.ToRelativeTimeSpan())</td>
                        <td>@(j.LastRunDuration.HasValue ? j.LastRunDuration.Value.ToTimeStringMini() : "")</td>
                    }
                    else
                    {
                        <td colspan="4" class="text-muted">no run history found</td>   
                    }
                    <td class="@(j.IsEnabled ? "text-success" : "text-warning")">@(j.IsEnabled ? "Yes" : "No")</td>
                    @if (Current.User.IsInRole(Roles.SQLAdmin))
                    {
                        <td class="actions">
                            @if (j.IsEnabled)
                            {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-warning" data-action="toggle" data-enable="false">disable</a>
                            }
                            else
                            {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-success" data-action="toggle" data-enable="true">enable</a>
                            }
                            @if (!j.IsRunning)
                            {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-primary" data-action="start" data-guid="@j.JobId.ToString()">start job</a>
                            }
                            else
                            {
                                <a href="#" class="js-sql-job-action btn btn-xs btn-danger" data-action="stop" data-guid="@j.JobId.ToString()">stop job</a>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="no-content">No memory clerk information available</div>
}