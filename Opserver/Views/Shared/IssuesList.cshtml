@using StackExchange.Opserver.Data.Dashboard
@using StackExchange.Opserver.Data.Elastic
@using StackExchange.Opserver.Data.HAProxy
@using StackExchange.Opserver.Data.MongoDB
@using StackExchange.Opserver.Data.Redis
@using StackExchange.Opserver.Data.SQL
@{
    Layout = null;
    var issues = IssueProvider.GetIssues();
}
@functions
{
    public string GetLink(Issue i)
    {
        var node = i as Issue<Node>;
        if (node?.Item != null)
        {
            return $"/dashboard/node?node={node.Item.PrettyName.UrlEncode()}";
        }
        var agIssue = i as Issue<SQLNode.AGInfo>;
        if (agIssue?.Item != null)
        {
            return $"/sql/servers#/cluster/{agIssue.Item.ClusterName.UrlEncode()}/{agIssue.Item.Name.UrlEncode()}";
        }
        var sqlInstance = i as Issue<SQLInstance>;
        if (sqlInstance?.Item != null)
        {
            return $"/sql/instance?node={sqlInstance.Item.Name.UrlEncode()}";
        }
        var redisInstance = i as Issue<RedisInstance>;
        if (redisInstance?.Item != null)
        {
            return $"/redis/instance?node={redisInstance.Item.HostAndPort}";
        }
        var elasticCluster = i as Issue<ElasticCluster>;
        if (elasticCluster?.Item != null)
        {
            return $"/elastic/cluster?cluster={elasticCluster.Item.Name}";
        }
        var mongoDBInstance = i as Issue<MongoDBInstance>;
        if (mongoDBInstance?.Item != null)
        {
            return $"/mongodb/instance?node={mongoDBInstance.Item.Name.UrlEncode()}";
        }
        var haproxyGroup = i as Issue<HAProxyGroup>;
        if (haproxyGroup?.Item != null)
        {
            return $"/haproxy?group={haproxyGroup.Item.Name.UrlEncode()}";
        }
        return "";
    }

}
@if (issues.Any())
{
            <ul class="nav navbar-nav">
                <li>
                    <a href="#" class="js-issues-botton" data-count="@issues.Count.ToString()"><span class="badge alert-@issues.GetWorstStatus().RawClass()">@issues.Count.ToComma()</span></a>
                </li>
            </ul>
}