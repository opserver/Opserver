@using StackExchange.Opserver.Controllers
@using StackExchange.Opserver.Data.Exceptions
@model StackExchange.Opserver.Views.Exceptions.ExceptionsModel
@{
    var log = Model.SelectedLog;
    var exceptions = Model.Errors;
    
    this.SetPageTitle(Model.Title);
    this.SetTopSearch((log.HasValue() ? log + " " : "") + "Exceptions",
                      Model.Search,
                      Url.Action(nameof(ExceptionsController.Search)),
                      log.HasValue() ? new Dictionary<string, string> {{"log", log}} : null);

    var distinctApps = Model.Applications.GroupBy(a => a.Name).Select(g => new { Name = g.Key, ExceptionCount = g.Sum(a => a.ExceptionCount), MostRecent = g.Max(a => a.MostRecent) });
}
@section head {
    <script>
        $(function() { Status.Exceptions.init({ refresh: 120, log: '@log', sort: '@Model.Sort', loadMore: @(Model.LoadAsyncSize), enablePreviews: @(Current.Settings.Exceptions.EnablePreviews ? "true" : "false") }); });
    </script>
}
<div class="js-refresh" data-name="exceptions-header">
    <h5 class="page-header">Exception Logs
        @if (!Model.ShowAll)
        {
            @: <a class="pull-right" href="@Url.Action(nameof(ExceptionsController.Exceptions))">View All</a> 
        }
        @if (ExceptionStores.Stores?.Any() == true)
        {
            @Helpers.PollNow(ExceptionStores.Stores?.First().NodeType)
        }
    </h5>
    <ul class="badge-link-list small">
        @foreach (var a in distinctApps)
        {
            <li class="@(a.Name == log ? "active" : null)" data-name="@a.Name">
                <a href="@Url.Action(nameof(ExceptionsController.Exceptions), new { log = a.Name })">@a.Name</a>
                <span class="badge@(a.ExceptionCount == 0 ? " alert-success" : null)">@a.ExceptionCount.ToComma()</span>
            </li>
        }
    </ul>
</div>
@if (ExceptionStores.Stores?.Any(s => s.MonitorStatus == MonitorStatus.Good) ?? false)
{
    <div class="js-refresh" data-name="exceptions-list">
        @Html.Partial("Exceptions.Table", Model)
        <div class="js-bottom-loader horizontal-load"><div class="sk-wave"><div></div><div></div><div></div><div></div><div></div></div></div>
        <div class="js-bottom-no-exceptions no-content text-success@(exceptions.Any() ? " hidden" : "")">No @log exceptions</div>
        <div class="js-bottom-no-more no-content small@(Model.HasMore ? null : " hidden")">End of active exception log</div>
    </div>
}
else
{
    <div class="js-refresh" data-name="exceptions-list">
        <div class="alert alert-warning">
            <h5>Nothing to display.</h5>
            <p>There was an error fetching from all exception stores.</p>
        </div>
    </div>
}