@using StackExchange.Opserver
@using StackExchange.Opserver.Data
@helper SectionHeader(string title, IHtmlString icon = null)
{
    <thead>
        <tr class="summary-section-header">
            <th colspan="2" class="summary-section-header">@icon @title</th>
        </tr>
    </thead>
}
@helper PollNow(PollNode n, Cache c = null)
{
    <a href="#" class="pull-right hover-pulsate js-reload-link" data-type="@n.NodeType" data-uk="@n.UniqueKey" data-guid="@(c?.UniqueId.ToString())" title="Updated @(n.LastPoll?.ToZuluTime())"><span class="glyphicon glyphicon-refresh"></span> <span class="js-text">Poll Now</span></a>
}
@helper PollNow(PollNode n, params Cache[] c)
{
    <a href="#" class="pull-right hover-pulsate js-reload-link" data-type="@n.NodeType" data-uk="@n.UniqueKey" data-guid="@(Json.Encode(c.Select(i => i.UniqueId)))" title="Updated @(n.LastPoll?.ToZuluTime())"><span class="glyphicon glyphicon-refresh"></span> <span class="js-text">Poll Now</span></a>
}
@helper PollNow(IEnumerable<PollNode> nodes)
{ 
    if (nodes != null)
    {
        <a href="#" class="pull-right hover-pulsate js-reload-link" data-type="@(nodes.FirstOrDefault()?.NodeType)" data-uk="@Json.Encode(nodes.Where(i => i != null).Select(i => i.UniqueKey))"><span class="glyphicon glyphicon-refresh"></span> <span class="js-text">Poll Now</span></a>
    }
}
@helper PollNow(string nodeType)
{
    <a href="#" class="pull-right hover-pulsate js-reload-link" data-type="@nodeType" data-uk="all"><span class="glyphicon glyphicon-refresh"></span> <span class="js-text">Poll Now</span></a>
}
@helper HealthDescription(IEnumerable<IMonitorStatus> ims, bool unknownIsHealthy = false)
{
    if (ims == null)
    {
        return;
    }
    var warning = ims.Where(ag => ag.MonitorStatus == MonitorStatus.Warning).ToList();
    var good = ims.Where(ag => ag.MonitorStatus == MonitorStatus.Good || (unknownIsHealthy && ag.MonitorStatus == MonitorStatus.Unknown)).ToList();
    var bad = ims.Except(warning).Except(good).ToList();

    if (bad.Any())
    {
        @:@MonitorStatus.Critical.IconSpan() @bad.Count.ToComma()
    }
    if (warning.Any())
    {
        @:@MonitorStatus.Warning.IconSpan() @warning.Count.ToComma()
    }
    if (good.Any())
    {
        @:@MonitorStatus.Good.IconSpan() @good.Count.ToComma()
    }
}